{"version":3,"file":"component---src-pages-cart-js-812e9c96d5cb7229b0ce.js","mappings":"kPAIA,EAAeA,IAAsE,IAArE,MAACC,EAAK,eAAEC,EAAc,QAAEC,EAAO,UAAEC,EAAS,OAAEC,EAAM,WAAEC,GAAWN,EAS7E,OAAIG,EACFI,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,0BACfD,EAAAA,cAAA,SAAG,yBAIHH,EAEAG,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,sBAAqB,KACpCD,EAAAA,cAAA,UAAI,YACJA,EAAAA,cAAA,SAAG,+DAIK,OAAVN,GAA+C,IAA7BA,EAAMQ,MAAMC,MAAMC,OAEpCJ,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAAA,OAAKC,UAAU,oBAAmB,MAClCD,EAAAA,cAAA,UAAI,sBACJA,EAAAA,cAAA,SAAG,wEACHA,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,SAASL,UAAU,oBAAmB,sBAOnDD,EAAAA,cAAA,OAAKC,UAAU,cACZP,EAAMQ,MAAMC,MAAMI,KAAKC,IACtB,MAAMC,EAAKD,EAAKA,KAAKC,GACfC,EAAOF,EAAKA,KAAKG,YAAYC,MAC7BC,EAAOL,EAAKA,KAAKG,YAAYG,QAAQF,MACrCG,EAAWP,EAAKA,KAAKO,SACrBC,EAAWR,EAAKA,KAAKG,YAAYG,QAAQG,OAAOd,MAAM,GAAGK,KAAKU,KAAO,GAE3E,OACElB,EAAAA,cAAA,OAAKmB,IAAKV,EAAIR,UAAU,aACtBD,EAAAA,cAAA,OAAKC,UAAU,oBACbD,EAAAA,cAAA,OAAKoB,IAAKJ,EAAUK,IAAKR,KAG3Bb,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,OAAKC,UAAU,qBACbD,EAAAA,cAAA,MAAIC,UAAU,oBACZD,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAE,UAAYO,EAAI,KAAMA,IAEhCb,EAAAA,cAAA,UACEC,UAAU,oBACVqB,QAASA,IAAM3B,EAAec,GAC9B,aAAW,eAEXT,EAAAA,cAACuB,EAAAA,IAAc,QAInBvB,EAAAA,cAAA,OAAKC,UAAU,sBACbD,EAAAA,cAAA,QAAMC,UAAU,sBAAsBS,GACtCV,EAAAA,cAAA,QAAMC,UAAU,uBAAsB,aAAWc,IAGnDf,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,SAAOC,UAAU,6BAA4B,YAE3CD,EAAAA,cAAA,SACEwB,KAAK,SACLC,MAAOV,EACPW,SAAWC,GA3EAC,EAACnB,EAAIkB,KAChC,MAAME,EAAcF,EAAEG,OAAOL,MACzBI,GAAe,GACjB9B,EAAWU,EAAIoB,EACjB,EAuEiCD,CAAqBnB,EAAIkB,GAC1CI,IAAI,IACJ9B,UAAU,iCAKd,IAKf,EC3FD,EAAeR,IAAA,IAAC,eACduC,EAAc,cACdC,GACDxC,EAAA,OACCO,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAAA,OAAKC,UAAU,yBACbD,EAAAA,cAAA,OAAKC,UAAU,uBACbD,EAAAA,cAAA,QAAMC,UAAU,uBAAsB,aACtCD,EAAAA,cAAA,QAAMC,UAAU,wBAAuB,IACnCgC,GAAiBA,EAAcC,eAAiBC,WAAWF,EAAcC,eAAeE,QAAQC,QAAQ,GAAK,SAInHrC,EAAAA,cAAA,UAAQC,UAAU,0CAA0CqB,QAASU,GAAgB,wBAK1F,E,UC0ED,MArFiBM,KACf,MAAM,iBAAEC,EAAgB,SAAEC,EAAQ,eAAE7C,EAAc,kBAAE8C,EAAiB,WAAE1C,IAAe2C,EAAAA,EAAAA,OAChF,EAAC9C,EAAQ,EAAC+C,IAAcC,EAAAA,EAAAA,WAAS,IACjC,EAAClD,EAAM,EAACmD,IAAYD,EAAAA,EAAAA,UAAS,KAC7B,EAAC/C,EAAU,EAACiD,IAAgBF,EAAAA,EAAAA,WAAS,IACrC,EAAC9C,EAAO,EAACiD,IAAaH,EAAAA,EAAAA,UAAS,CAAC,GAChCI,GAAWC,EAAAA,EAAAA,gBAGjBC,EAAAA,EAAAA,YAAU,KACeC,WACrB,MAAMrD,EAASsD,aAAaC,QAAQ,UACpC,GAAIvD,KAAY0C,GAAYA,EAAS/B,KAAOX,GAC1C,UACQyC,EAAiBzC,EACzB,CAAE,MAAOwD,GACPC,QAAQD,MAAM,uBAAwBA,EACxC,CAEFP,EAAUjD,GACV6C,GAAW,EAAM,EAGnBa,EAAgB,GACf,CAACjB,EAAkBC,KAEtBU,EAAAA,EAAAA,YAAU,KAEuB,YADhB,IAAIO,gBAAgBT,EAASU,QACjCC,IAAI,cACbb,GAAa,GACbM,aAAaQ,QAAQ,oBAAqB,QAC1CR,aAAaS,WAAW,UACxBd,EAAU,MACZ,GACC,CAACC,EAASU,SASb,OACE1D,EAAAA,cAAC8D,EAAAA,EAAM,KACL9D,EAAAA,cAAC+D,EAAAA,EAAG,CAACnD,MAAM,0CAA0CoD,YAAY,uBAEjEhE,EAAAA,cAAA,OAAKC,UAAU,aACbD,EAAAA,cAAA,OAAKC,UAAU,aAEbD,EAAAA,cAAA,OAAKC,UAAU,cACbD,EAAAA,cAACK,EAAAA,KAAI,CAACC,GAAG,IAAIL,UAAU,oBAAmB,QAC1CD,EAAAA,cAAA,QAAMC,UAAU,yBAAwB,KACxCD,EAAAA,cAAA,QAAMC,UAAU,uBAAsB,SAIxCD,EAAAA,cAAA,UAAQC,UAAU,eAChBD,EAAAA,cAAA,MAAIC,UAAU,cAAa,cAI7BD,EAAAA,cAAA,OAAKC,UAAU,gBACbD,EAAAA,cAACiE,EAAY,CACXpE,UAAWA,EACXH,MAAO8C,EACP5C,QAASA,EACTE,OAAQA,EACRH,eAAgBuE,GAAQvE,EAAeuE,GACvCnE,WAAYA,KAGZH,IAAYC,GACZG,EAAAA,cAACmE,EAAW,CACVlC,eAAeO,aAAQ,EAARA,EAAUP,gBAAiB,CAAEC,eAAgB,CAAEE,OAAQ,IACtEJ,eAvCSmB,UACrB,MAAMiB,QAAoB3B,IACtB2B,IACFC,OAAOrB,SAASsB,KAAOF,EACzB,OAyCS,C","sources":["webpack://gatsby-starter-default/./src/components/CartItemList/index.js","webpack://gatsby-starter-default/./src/components/CartSummary/index.js","webpack://gatsby-starter-default/./src/pages/cart.js"],"sourcesContent":["import React from 'react'\nimport {Link} from 'gatsby'\nimport { AiOutlineMinus, AiOutlinePlus, AiOutlineClose } from \"react-icons/ai\";\n\nexport default ({items, removeFromCart, loading, completed, cartId, updateCart}) => {\n\n  const handleQuantityChange = (id, e) => {\n    const newQuantity = e.target.value;\n    if (newQuantity >= 0) {\n      updateCart(id, newQuantity);\n    }\n  };\n\n  if (loading) return (\n    <div className=\"cart-loading\">\n      <div className=\"cart-loading__spinner\"></div>\n      <p>Loading your cart...</p>\n    </div>\n  );\n\n  if (completed)\n    return (\n      <div className=\"cart-success\">\n        <div className=\"cart-success__icon\">âœ“</div>\n        <h2>Success!</h2>\n        <p>Congratulations. Your order and payment has been accepted.</p>\n      </div>\n    );\n\n  if (items === null || items.lines.edges.length === 0)\n    return (\n      <div className=\"cart-empty\">\n        <div className=\"cart-empty__icon\">ðŸ›’</div>\n        <h2>Your cart is empty</h2>\n        <p>You will need to add some items to the cart before you can checkout.</p>\n        <Link to=\"/store\" className=\"btn btn--primary\">\n          Continue Shopping\n        </Link>\n      </div>\n    );\n\n  return (\n    <div className=\"cart-items\">\n      {items.lines.edges.map((node) => {\n        const id = node.node.id;\n        const size = node.node.merchandise.title;\n        const name = node.node.merchandise.product.title;\n        const quantity = node.node.quantity;\n        const imageUrl = node.node.merchandise.product.images.edges[0].node.url || '';\n\n        return (\n          <div key={id} className=\"cart-item\">\n            <div className=\"cart-item__image\">\n              <img src={imageUrl} alt={name} />\n            </div>\n            \n            <div className=\"cart-item__content\">\n              <div className=\"cart-item__header\">\n                <h3 className=\"cart-item__title\">\n                  <Link to={`/store/${name}/`}>{name}</Link>\n                </h3>\n                <button \n                  className=\"cart-item__remove\" \n                  onClick={() => removeFromCart(id)}\n                  aria-label=\"Remove item\"\n                >\n                  <AiOutlineClose />\n                </button>\n              </div>\n              \n              <div className=\"cart-item__details\">\n                <span className=\"cart-item__variant\">{size}</span>\n                <span className=\"cart-item__quantity\">Quantity: {quantity}</span>\n              </div>\n              \n              <div className=\"cart-item__controls\">\n                <label className=\"cart-item__quantity-label\">\n                  Quantity:\n                  <input\n                    type=\"number\"\n                    value={quantity}\n                    onChange={(e) => handleQuantityChange(id, e)}\n                    min=\"0\"\n                    className=\"cart-item__quantity-input\"\n                  />\n                </label>\n              </div>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n","import React from 'react'\n\nexport default ({\n  handleCheckout,\n  estimatedCost\n}) => (\n  <div className=\"cart-summary\">\n    <div className=\"cart-summary__content\">\n      <div className=\"cart-summary__total\">\n        <span className=\"cart-summary__label\">Subtotal:</span>\n        <span className=\"cart-summary__amount\">\n          R{estimatedCost && estimatedCost.subtotalAmount ? parseFloat(estimatedCost.subtotalAmount.amount).toFixed(2) : '0.00'}\n        </span>\n      </div>\n      \n      <button className=\"btn btn--primary cart-summary__checkout\" onClick={handleCheckout}>\n        Proceed to Checkout\n      </button>\n    </div>\n  </div>\n)\n","import React, { useState, useEffect } from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport { Link } from \"gatsby\";\nimport { useStore } from \"../context/StoreContext\";\nimport CartItemList from '../components/CartItemList'\nimport CartSummary from '../components/CartSummary'\nimport { useLocation } from \"@reach/router\";\n\nconst CartPage = () => {\n  const { fetchCartDetails, cartData, removeFromCart, createCheckoutUrl, updateCart } = useStore();\n  const [loading, setLoading] = useState(true);\n  const [items, setItems] = useState([])\n  const [completed, setCompleted] = useState(false)\n  const [cartId, setCartId] = useState({})\n  const location = useLocation();\n\n  // Fetch cart details on mount\n  useEffect(() => {\n    const initializeCart = async () => {\n      const cartId = localStorage.getItem(\"cartId\");\n      if (cartId && (!cartData || cartData.id !== cartId)) {\n        try {\n          await fetchCartDetails(cartId);\n        } catch (error) {\n          console.error(\"Error fetching cart:\", error);\n        }\n      }\n      setCartId(cartId)\n      setLoading(false);\n    };\n\n    initializeCart();\n  }, [fetchCartDetails, cartData]);\n\n  useEffect(() => {\n    const params = new URLSearchParams(location.search);\n    if (params.get(\"checkout\") === \"success\") {\n      setCompleted(true);\n      localStorage.setItem(\"checkoutCompleted\", \"true\");\n      localStorage.removeItem(\"cartId\");\n      setCartId(null);\n    }\n  }, [location.search]);\n\n  const handleCheckout = async () => {\n    const checkoutUrl = await createCheckoutUrl();\n    if (checkoutUrl) {\n      window.location.href = checkoutUrl;\n    }\n  };\n\n  return (\n    <Layout>\n      <SEO title=\"Cart - Vee/Ra Decadent Botanical Blends\" description=\"Your shopping cart\" />\n      \n      <div className=\"cart-page\">\n        <div className=\"container\">\n          {/* Breadcrumb */}\n          <nav className=\"breadcrumb\">\n            <Link to=\"/\" className=\"breadcrumb__link\">Home</Link>\n            <span className=\"breadcrumb__separator\">/</span>\n            <span className=\"breadcrumb__current\">Cart</span>\n          </nav>\n\n          {/* Cart Header */}\n          <header className=\"cart-header\">\n            <h1 className=\"cart-title\">Your Cart</h1>\n          </header>\n\n          {/* Cart Content */}\n          <div className=\"cart-content\">\n            <CartItemList\n              completed={completed}\n              items={cartData}\n              loading={loading}\n              cartId={cartId}\n              removeFromCart={item => removeFromCart(item)}\n              updateCart={updateCart}\n            />\n            \n            {!loading && !completed && (\n              <CartSummary\n                estimatedCost={cartData?.estimatedCost || { subtotalAmount: { amount: 0 } }}\n                handleCheckout={handleCheckout}\n              />\n            )}\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default CartPage;\n"],"names":["_ref","items","removeFromCart","loading","completed","cartId","updateCart","React","className","lines","edges","length","Link","to","map","node","id","size","merchandise","title","name","product","quantity","imageUrl","images","url","key","src","alt","onClick","AiOutlineClose","type","value","onChange","e","handleQuantityChange","newQuantity","target","min","handleCheckout","estimatedCost","subtotalAmount","parseFloat","amount","toFixed","CartPage","fetchCartDetails","cartData","createCheckoutUrl","useStore","setLoading","useState","setItems","setCompleted","setCartId","location","useLocation","useEffect","async","localStorage","getItem","error","console","initializeCart","URLSearchParams","search","get","setItem","removeItem","Layout","SEO","description","CartItemList","item","CartSummary","checkoutUrl","window","href"],"sourceRoot":""}