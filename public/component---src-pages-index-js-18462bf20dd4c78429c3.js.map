{"version":3,"file":"component---src-pages-index-js-18462bf20dd4c78429c3.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/modern/hero.js","webpack://gatsby-starter-default/./src/components/modern/about.js","webpack://gatsby-starter-default/./src/components/modern/products-home.js","webpack://gatsby-starter-default/./src/components/modern/process.js","webpack://gatsby-starter-default/./src/components/modern/blog.js","webpack://gatsby-starter-default/./src/components/modern/contact.js","webpack://gatsby-starter-default/./src/pages/index.js"],"sourcesContent":["import React from 'react';\nimport { useStaticQuery, graphql } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\nimport { Link } from 'gatsby';\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\nimport { BLOCKS, MARKS } from \"@contentful/rich-text-types\";\n\nconst Bold = ({ children }) => <strong>{children}</strong>;\nconst Text = ({ children }) => <p>{children}</p>;\n\nconst options = {\n  renderMark: {\n    [MARKS.BOLD]: text => <Bold>{text}</Bold>,\n  },\n  renderNode: {\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\n    [BLOCKS.EMBEDDED_ASSET]: node => {\n      return (\n        <div className=\"blog-image\">\n          <GatsbyImage image={node.data.target.gatsbyImageData} alt={node.data.target.title} />\n        </div>\n      );\n    },\n  },\n};\n\nconst Hero = () => {\n  const data = useStaticQuery(graphql`\n    query HeroQuery {\n      contentfulHero {\n        title\n        subtitle\n        cta\n        description {\n          raw\n        }\n        bgImage {\n          gatsbyImageData\n        }\n      }\n      file(relativePath: {eq: \"images/Final-Logo-PNGs/Gold/Ra-Logo-29.png\"}) {\n        childImageSharp {\n          gatsbyImageData(width: 400)\n        }\n      }\n    }\n  `);\n\n  const heroData = data.contentfulHero;\n  const logo = data.file.childImageSharp.gatsbyImageData;\n\n  return (\n    <section \n      className=\"hero\" \n      style={{\n        backgroundImage: `url(${heroData.bgImage.gatsbyImageData.images.fallback.src})`,\n        backgroundSize: 'cover',\n        backgroundPosition: 'center',\n        backgroundRepeat: 'no-repeat'\n      }}\n    >\n      <div className=\"hero__overlay\">\n        <div className=\"hero__content\">\n          <h1 className=\"hero__title\">\n            {heroData.title}\n          </h1>\n          <h3 className=\"hero__subtitle\">\n            {heroData.subtitle}\n          </h3>\n          <p className=\"hero__description\">\n          {documentToReactComponents(JSON.parse(heroData.description.raw), options)}\n          </p>\n          <div className=\"hero__cta\">\n            <Link to=\"/store\" className=\"hero__cta__link\">\n              {heroData.cta}\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Hero; ","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst About = () => {\n  const data = useStaticQuery(graphql`\n    query AboutSectionQuery {\n      file(relativePath: {eq: \"images/others/cups-display.jpeg\"}) {\n        childImageSharp {\n          gatsbyImageData(width: 600)\n        }\n      }\n    }\n  `);\n\n  const image = data.file.childImageSharp.gatsbyImageData;\n\n  return (\n    <section className=\"about\">\n      <div className=\"container\">\n        <div className=\"about__grid\">\n          <div className=\"about__content\">\n            <h2 className=\"about__title\">\n              Crafted with Intention\n            </h2>\n            <p className=\"about__text\">\n              Our premium botanical blends combine the finest cacao with carefully selected herbs and medicinal plants. Each blend is crafted to support your unique wellness journey, whether you seek emotional balance, inner calm, or grounding connection.\n            </p>\n            <p className=\"about__text\">\n              From our signature Mood Magick blend to our lunar-inspired Moon Mylk and grounding Ritual Roots, every cup is an invitation to pause, reflect, and nourish your body and soul through mindful herbal practices.\n            </p>\n            <div className=\"about__cta\">\n              <Link to=\"/about\" className=\"btn btn--secondary\">\n                Learn More\n              </Link>\n            </div>\n          </div>\n          <div className=\"about__image\">\n            <GatsbyImage image={image} alt=\"Cacao cups display\" />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default About; ","import React from 'react';\nimport { useStaticQuery, graphql, Link } from 'gatsby';\nimport { GatsbyImage } from \"gatsby-plugin-image\";\n\nconst ProductsHome = () => {\n  const data = useStaticQuery(graphql`\n    query ProductsHomeQuery {\n      allShopifyProduct {\n        edges {\n          node {\n            featuredImage {\n              gatsbyImageData\n            }\n            description\n            title\n            priceRangeV2 {\n              maxVariantPrice {\n                amount\n                currencyCode\n              }\n              minVariantPrice {\n                amount\n                currencyCode\n              }\n            }\n            shopifyId\n            tags\n          }\n        }\n      }\n    }\n  `);\n\n  const products = data.allShopifyProduct.edges;\n  \n  // Filter for Botanical Blends (Premix Blends) only\n  const botanicalBlends = products.filter(({ node }) => \n    node.tags && node.tags.some(tag => \n      tag.toLowerCase().includes('blend')\n    )\n  );\n  \n  // Custom sorting function to order products as requested\n  const sortProducts = (productList) => {\n    const orderMap = {\n      'mood magick': 1,\n      'moon mylk': 2,\n      'ritual roots': 3\n    };\n    \n    return productList.sort((a, b) => {\n      const titleA = a.node.title.toLowerCase();\n      const titleB = b.node.title.toLowerCase();\n      \n      // Check if titles contain our target product names\n      const getOrder = (title) => {\n        for (const [key, value] of Object.entries(orderMap)) {\n          if (title.includes(key)) return value;\n        }\n        return 999; // Default order for other products\n      };\n      \n      return getOrder(titleA) - getOrder(titleB);\n    });\n  };\n  \n  // Sort and limit to 3 products for home page display\n  const displayProducts = sortProducts(botanicalBlends).slice(0, 3);\n\n  const formatPrice = (price) => {\n    if (price.maxVariantPrice.amount === price.minVariantPrice.amount) {\n      return `R${parseFloat(price.maxVariantPrice.amount).toFixed(2)}`;\n    } else {\n      return `R${parseFloat(price.minVariantPrice.amount).toFixed(2)} - R${parseFloat(price.maxVariantPrice.amount).toFixed(2)}`;\n    }\n  };\n\n  return (\n    <section className=\"products\">\n      <div className=\"container\">\n        <div className=\"products__header\">\n          <h2 className=\"products__title\">Botanical Blends</h2>\n          <p className=\"products__subtitle\">\n            Our signature cacao and/or botanical blends crafted for wellness and ritual\n          </p>\n        </div>\n        <div className=\"products__grid\">\n          {displayProducts.map(({ node }) => (\n            <div key={node.shopifyId} className=\"product-card\">\n              <Link to={`/store/${node.title}`} className=\"product-card__link\">\n                <div className=\"product-card__image\">\n                  <GatsbyImage \n                    image={node.featuredImage.gatsbyImageData}\n                    alt={node.title}\n                    className=\"product-card__img\"\n                  />\n                </div>\n                <div className=\"product-card__content\">\n                  <h3 className=\"product-card__name\">{node.title}</h3>\n                  <p className=\"product-card__description\">\n                    {node.description && node.description.length > 80 \n                      ? `${node.description.substring(0, 80)}...` \n                      : node.description\n                    }\n                  </p>\n                  <div className=\"product-card__price\">{formatPrice(node.priceRangeV2)}</div>\n                </div>\n              </Link>\n            </div>\n          ))}\n        </div>\n        <div className=\"products__cta\">\n          <Link to=\"/store\" className=\"btn btn--primary\">\n            View All Products\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default ProductsHome;\n","import React from 'react';\n\nconst Process = () => {\n  const steps = [\n    {\n      number: \"01\",\n      title: \"Choose Your Blend\",\n      description: \"Select from our signature blends: Mood Magick for Energy, Moon Mylk for Relaxation, or Ritual Roots for Grounding.\"\n    },\n    {\n      number: \"02\",\n      title: \"Prepare with Intention\",\n      description: \"Prepare your chosen blend with intention and presence, honoring the ancient wisdom of cacao and medicinal plants.\"\n    },\n    {\n      number: \"03\",\n      title: \"Savor the Moment\",\n      description: \"Find a quiet space, take a deep breath, and slowly sip your blend mindfully, allowing its transformative properties to work its magic.\"\n    }\n  ];\n\n  return (\n    <section className=\"process\">\n      <div className=\"container\">\n        <div className=\"process__header\">\n          <h2 className=\"process__title\">Your Sacred Ritual</h2>\n          <p className=\"process__subtitle\">\n            Transform your daily practice with our signature botanical blends through intention and presence\n          </p>\n        </div>\n        <div className=\"process__steps\">\n          {steps.map((step, index) => (\n            <div key={index} className=\"process-step\">\n              <div className=\"process-step__number\">{step.number}</div>\n              <div className=\"process-step__content\">\n                <h3 className=\"process-step__title\">{step.title}</h3>\n                <p className=\"process-step__description\">{step.description}</p>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Process; ","import React from 'react';\nimport { useStaticQuery, graphql, Link } from \"gatsby\";\nimport { GatsbyImage } from 'gatsby-plugin-image';\n\nconst Blog = ({ title, date, path, image, excerpt }) => {\n  return (\n    <article className=\"blog-card\">\n      <div className=\"blog-card__image\">\n        {image && (\n          <Link to={`/blog/${path}`}>\n            <GatsbyImage image={image} alt={title} className=\"blog-card__img\" />\n          </Link>\n        )}\n      </div>\n      \n      <div className=\"blog-card__content\">\n        {date && (\n          <time className=\"blog-card__date\">\n            {new Date(date).toLocaleDateString('en-US', {\n              year: 'numeric',\n              month: 'long',\n              day: 'numeric'\n            })}\n          </time>\n        )}\n        \n        {title && (\n          <h3 className=\"blog-card__title\">\n            <Link to={`/news/${path}`}>{title}</Link>\n          </h3>\n        )}\n        \n        {excerpt && (\n          <p className=\"blog-card__excerpt\">{excerpt}</p>\n        )}\n        \n        <div className=\"blog-card__link\">\n          <Link to={`/news/${path}`}>\n            <span>Read More</span>\n            <svg width=\"16\" height=\"16\" viewBox=\"0 0 16 16\" fill=\"none\">\n              <path d=\"M8 1L15 8L8 15\" stroke=\"currentColor\" strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\"/>\n            </svg>\n          </Link>\n        </div>\n      </div>\n    </article>\n  );\n};\n\nconst BlogSection = () => {\n  const blogQueryData = useStaticQuery(graphql`\n    query BlogListQuery {\n      allContentfulBlogPost(limit: 3, sort: {createdAt: DESC}) {\n        edges {\n          node {\n            title\n            slug\n            createdAt\n            image {\n              gatsbyImageData(width: 400, height: 250)\n            }\n            body {\n              raw\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  const blogs = blogQueryData.allContentfulBlogPost.edges;\n\n  return (\n    <section className=\"blog-section\">\n      <div className=\"container\">\n        <div className=\"blog-section__header\">\n          <h2 className=\"blog-section__title\">\n            News & Insights\n          </h2>\n          <p className=\"blog-section__subtitle\">\n            Discover wisdom, rituals, and insights for your sacred journey\n          </p>\n        </div>\n        \n        <div className=\"blog-grid\">\n          {blogs.map(blog => (\n            <div className=\"blog-grid__item\" key={blog.node.slug}>\n              <Blog\n                image={blog.node.image.gatsbyImageData}\n                title={blog.node.title}\n                path={blog.node.slug}\n                date={blog.node.createdAt}\n                excerpt={blog.node.body?.raw ? \n                  JSON.parse(blog.node.body.raw).content[0]?.content[0]?.value?.substring(0, 120) + '...' : \n                  'Read our latest insights on sacred rituals and botanical wisdom.'\n                }\n              />\n            </div>\n          ))}\n        </div>\n        \n        <div className=\"blog-section__cta\">\n          <Link to=\"/news\" className=\"blog-section__link\">\n            View All Posts\n          </Link>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default BlogSection; ","import React from 'react';\nimport { Link } from 'gatsby';\n\nconst Contact = () => {\n  return (\n    <section className=\"contact\">\n      <div className=\"container\">\n        <div className=\"contact__content\">\n          <h2 className=\"contact__title\">Connect With Us</h2>\n          <p className=\"contact__text\">\n            Have questions about our blends or want to share your ritual experience? \n            We'd love to hear from you.\n          </p>\n          <div className=\"contact__links\">\n            <a href=\"mailto:info@veera.co.za\" className=\"contact__link\">\n              info@veera.co.za\n            </a>\n            <a target=\"_blank\" href=\"https://instagram.com/vee_ra_botanicalblends\" className=\"contact__link\">\n              @vee_ra_botanicalblends\n            </a>\n          </div>\n          <div className=\"contact__cta\">\n            <Link to=\"/contact\" className=\"btn btn--primary\">\n              Get in Touch\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Contact; ","import React from \"react\";\nimport Layout from \"../components/layout\";\nimport SEO from \"../components/seo\";\nimport Hero from \"../components/modern/hero\";\nimport About from \"../components/modern/about\";\nimport Products from \"../components/modern/products-home\";\nimport Process from \"../components/modern/process\";\nimport BlogSection from \"../components/modern/blog\";\nimport Contact from \"../components/modern/contact\";\n\nconst IndexPage = () => {\n  // Structured data for the homepage with cacao focus\n  const structuredData = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"WebSite\",\n    \"name\": \"Vee/Ra Botanical Blends - Premium Ceremonial Cacao & Coffee Alternatives\",\n    \"description\": \"Premium ceremonial cacao blends and coffee alternative herbal wellness products. Expertly crafted cacao ceremonies, ceremonial grade cacao, and natural coffee substitutes for health, longevity, and inner harmony.\",\n    \"url\": \"https://vee-ra.netlify.app\",\n    \"potentialAction\": {\n      \"@type\": \"SearchAction\",\n      \"target\": \"https://vee-ra.netlify.app/search?q={search_term_string}\",\n      \"query-input\": \"required name=search_term_string\"\n    },\n    \"publisher\": {\n      \"@type\": \"Organization\",\n      \"name\": \"Vee/Ra Botanical Blends\",\n      \"logo\": {\n        \"@type\": \"ImageObject\",\n        \"url\": \"https://vee-ra.netlify.app/static/logo.png\"\n      }\n    },\n    \"mainEntity\": {\n      \"@type\": \"ItemList\",\n      \"name\": \"Cacao Blends & Wellness Products\",\n      \"description\": \"Premium ceremonial cacao blends and coffee alternative herbal wellness products\",\n      \"itemListElement\": [\n        {\n          \"@type\": \"Product\",\n          \"position\": 1,\n          \"name\": \"Mood Magick Cacao Blend\",\n          \"description\": \"Ceremonial cacao blend for emotional balance and mood enhancement\",\n          \"url\": \"https://vee-ra.netlify.app/store#mood-magick\",\n          \"category\": \"Ceremonial Cacao\"\n        },\n        {\n          \"@type\": \"Product\",\n          \"position\": 2,\n          \"name\": \"Moon Mylk Cacao Blend\",\n          \"description\": \"Lunar-inspired ceremonial cacao blend for intuition and feminine energy\",\n          \"url\": \"https://vee-ra.netlify.app/store#moon-mylk\",\n          \"category\": \"Ceremonial Cacao\"\n        },\n        {\n          \"@type\": \"Product\",\n          \"position\": 3,\n          \"name\": \"Ritual Roots Coffee Alternative\",\n          \"description\": \"Herbal coffee alternative blend with roasted bitter flavors for caffeine and coffee sensitive people\",\n          \"url\": \"https://vee-ra.netlify.app/store#ritual-roots\",\n          \"category\": \"Coffee Alternative\"\n        }\n      ]\n    }\n  };\n\n  return (\n    <Layout>\n      <SEO \n        title=\"Premium Ceremonial Cacao Blends & Coffee Alternatives | Vee/Ra Botanical Wellness\"\n        description=\"Discover premium ceremonial cacao blends and coffee alternative herbal wellness products. Expertly crafted cacao ceremonies, ceremonial grade cacao, and natural coffee substitutes for health and inner harmony.\"\n        keywords=\"ceremonial cacao, ceremonial grade cacao, cacao ceremonies, cacao blend, ceremonial cacao blend, cacao wellness, cacao ritual, sacred cacao, medicinal cacao, coffee alternative, herbal coffee substitute, caffeine free coffee, coffee sensitive, botanical wellness, health supplements, longevity\"\n        image=\"https://vee-ra.netlify.app/static/og-image.jpg\"\n        canonical=\"https://vee-ra.netlify.app\"\n        structuredData={structuredData}\n      />\n      <Hero />\n      <About />\n      <Products />\n      <Process />\n      <BlogSection />\n      <Contact />\n    </Layout>\n  );\n};\n\nexport default IndexPage;\n"],"names":["Bold","_ref","children","React","Text","_ref2","options","renderMark","MARKS","BOLD","text","renderNode","BLOCKS","PARAGRAPH","node","EMBEDDED_ASSET","className","GatsbyImage","image","data","target","gatsbyImageData","alt","title","Hero","useStaticQuery","heroData","contentfulHero","file","childImageSharp","style","backgroundImage","bgImage","images","fallback","src","backgroundSize","backgroundPosition","backgroundRepeat","subtitle","documentToReactComponents","JSON","parse","description","raw","Link","to","cta","About","ProductsHome","displayProducts","productList","orderMap","sort","a","b","titleA","toLowerCase","titleB","getOrder","key","value","Object","entries","includes","sortProducts","allShopifyProduct","edges","filter","tags","some","tag","slice","map","shopifyId","featuredImage","length","substring","price","priceRangeV2","maxVariantPrice","amount","minVariantPrice","parseFloat","toFixed","Process","number","step","index","Blog","date","path","excerpt","Date","toLocaleDateString","year","month","day","width","height","viewBox","fill","d","stroke","strokeWidth","strokeLinecap","strokeLinejoin","BlogSection","blogs","allContentfulBlogPost","blog","_blog$node$body","_JSON$parse$content$","_JSON$parse$content$$","_JSON$parse$content$$2","slug","createdAt","body","content","Contact","href","IndexPage","Layout","SEO","keywords","canonical","structuredData","Products"],"sourceRoot":""}