{"version":3,"file":"component---src-template-blog-details-js-59eae6ee240d292c099d.js","mappings":"4MAOA,MAAMA,EAAOC,IAAA,IAAC,SAAEC,GAAUD,EAAA,OAAKE,EAAAA,cAAA,cAASD,EAAkB,EACpDE,EAAOC,IAAA,IAAC,SAAEH,GAAUG,EAAA,OAAKF,EAAAA,cAAA,SAAID,EAAa,EAE1CI,EAAU,CACdC,WAAY,CACV,CAACC,EAAAA,MAAMC,MAAOC,GAAQP,EAAAA,cAACH,EAAI,KAAEU,IAE/BC,WAAY,CACV,CAACC,EAAAA,OAAOC,WAAY,CAACC,EAAMZ,IAAaC,EAAAA,cAACC,EAAI,KAAEF,GAC/C,CAACU,EAAAA,OAAOG,gBAAiBD,GAErBX,EAAAA,cAAA,OAAKa,UAAU,cACbb,EAAAA,cAACc,EAAAA,EAAW,CAACC,MAAOJ,EAAKK,KAAKC,OAAOC,gBAAiBC,IAAKR,EAAKK,KAAKC,OAAOG,WAiGtF,UA1FoBC,IAA4B,IAA3B,KAAEL,EAAI,YAAEM,GAAaD,EACxC,MAAME,EAAOP,EAAKQ,mBAIlB,OAFAC,QAAQC,IAAaH,GAGnBvB,EAAAA,cAAC2B,EAAAA,EAAM,KACL3B,EAAAA,cAAA,WAASa,UAAU,aACjBb,EAAAA,cAAA,OAAKa,UAAU,aAEbb,EAAAA,cAAA,OAAKa,UAAU,cACbb,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAG,IAAIhB,UAAU,oBAAmB,QAC1Cb,EAAAA,cAAA,QAAMa,UAAU,yBAAwB,KACxCb,EAAAA,cAAC4B,EAAAA,KAAI,CAACC,GAAG,QAAQhB,UAAU,oBAAmB,QAC9Cb,EAAAA,cAAA,QAAMa,UAAU,yBAAwB,KACxCb,EAAAA,cAAA,QAAMa,UAAU,uBAAuBU,EAAKH,QAG9CpB,EAAAA,cAAA,OAAKa,UAAU,gBAEZU,EAAKR,OACJf,EAAAA,cAAA,OAAKa,UAAU,cACbb,EAAAA,cAACc,EAAAA,EAAW,CACVC,MAAOQ,EAAKR,MAAMG,gBAClBC,IAAKI,EAAKH,MACVP,UAAU,sBAMhBb,EAAAA,cAAA,UAAQa,UAAU,eAChBb,EAAAA,cAAA,MAAIa,UAAU,cAAcU,EAAKH,OAChCG,EAAKO,WACJ9B,EAAAA,cAAA,QAAMa,UAAU,aACb,IAAIkB,KAAKR,EAAKO,WAAWE,mBAAmB,QAAS,CACpDC,KAAM,UACNC,MAAO,OACPC,IAAK,cAObnC,EAAAA,cAAA,OAAKa,UAAU,aACZU,EAAKa,MACJpC,EAAAA,cAAA,OAAKa,UAAU,uBACZwB,EAAAA,EAAAA,GAA0BC,KAAKC,MAAMhB,EAAKa,KAAKI,KAAMrC,QAqB3D,C","sources":["webpack://gatsby-starter-default/./src/template/blog-details.js"],"sourcesContent":["import React from 'react';\r\nimport { graphql, Link } from \"gatsby\";\r\nimport { GatsbyImage } from 'gatsby-plugin-image';\r\nimport Layout from \"../components/layout\";\r\nimport { documentToReactComponents } from \"@contentful/rich-text-react-renderer\";\r\nimport { BLOCKS, MARKS } from \"@contentful/rich-text-types\";\r\n\r\nconst Bold = ({ children }) => <strong>{children}</strong>;\r\nconst Text = ({ children }) => <p>{children}</p>;\r\n\r\nconst options = {\r\n  renderMark: {\r\n    [MARKS.BOLD]: text => <Bold>{text}</Bold>,\r\n  },\r\n  renderNode: {\r\n    [BLOCKS.PARAGRAPH]: (node, children) => <Text>{children}</Text>,\r\n    [BLOCKS.EMBEDDED_ASSET]: node => {\r\n      return (\r\n        <div className=\"blog-image\">\r\n          <GatsbyImage image={node.data.target.gatsbyImageData} alt={node.data.target.title} />\r\n        </div>\r\n      );\r\n    },\r\n  },\r\n};\r\n\r\nconst BlogDetails = ({ data, pageContext }) => {\r\n  const post = data.contentfulBlogPost;\r\n\r\n  console.log((\"POST\", post))\r\n  \r\n  return (\r\n    <Layout>\r\n      <article className=\"blog-post\">\r\n        <div className=\"container\">\r\n          {/* Breadcrumb */}\r\n          <nav className=\"breadcrumb\">\r\n            <Link to=\"/\" className=\"breadcrumb__link\">Home</Link>\r\n            <span className=\"breadcrumb__separator\">/</span>\r\n            <Link to=\"/news\" className=\"breadcrumb__link\">News</Link>\r\n            <span className=\"breadcrumb__separator\">/</span>\r\n            <span className=\"breadcrumb__current\">{post.title}</span>\r\n          </nav>\r\n\r\n          <div className=\"blog-content\">\r\n            {/* Featured Image */}\r\n            {post.image && (\r\n              <div className=\"blog-image\">\r\n                <GatsbyImage \r\n                  image={post.image.gatsbyImageData} \r\n                  alt={post.title}\r\n                  className=\"blog-image__main\"\r\n                />\r\n              </div>\r\n            )}\r\n\r\n            {/* Post Header */}\r\n            <header className=\"blog-header\">\r\n              <h1 className=\"blog-title\">{post.title}</h1>\r\n              {post.createdAt && (\r\n                <time className=\"blog-date\">\r\n                  {new Date(post.createdAt).toLocaleDateString('en-US', {\r\n                    year: 'numeric',\r\n                    month: 'long',\r\n                    day: 'numeric'\r\n                  })}\r\n                </time>\r\n              )}\r\n            </header>\r\n\r\n            {/* Post Content */}\r\n            <div className=\"blog-body\">\r\n              {post.body && (\r\n                <div className=\"blog-content__text\">\r\n                  {documentToReactComponents(JSON.parse(post.body.raw), options)}\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {/* category */}\r\n            {/*post.category && post.category.length > 0 && (\r\n              <div className=\"blog-tags\">\r\n                <span className=\"blog-tags\">category:</span>\r\n                <div className=\"blog-tags__list\">\r\n                  {post.category.map((tag, index) => (\r\n                    <Link key={index} to={`/tag/${tag}`} className=\"blog-tag\">\r\n                      {tag}\r\n                    </Link>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            )*/}\r\n          </div>\r\n        </div>\r\n      </article>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport const query = graphql`\r\nquery blogDetailsQuery ($slug: String!) {\r\n    contentfulBlogPost (slug: { eq: $slug }) {\r\n      title\r\n      slug\r\n      createdAt\r\n      image {\r\n        gatsbyImageData\r\n        title\r\n      }\r\n      body {\r\n        raw\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default BlogDetails;\r\n"],"names":["Bold","_ref","children","React","Text","_ref2","options","renderMark","MARKS","BOLD","text","renderNode","BLOCKS","PARAGRAPH","node","EMBEDDED_ASSET","className","GatsbyImage","image","data","target","gatsbyImageData","alt","title","_ref3","pageContext","post","contentfulBlogPost","console","log","Layout","Link","to","createdAt","Date","toLocaleDateString","year","month","day","body","documentToReactComponents","JSON","parse","raw"],"sourceRoot":""}