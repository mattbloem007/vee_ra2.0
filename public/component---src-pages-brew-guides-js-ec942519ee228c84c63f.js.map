{"version":3,"file":"component---src-pages-brew-guides-js-ec942519ee228c84c63f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/assets/images/products/mood-magick-thumbnail.png","webpack://gatsby-starter-default/./src/assets/images/products/moon-mylk-thumbnail.png","webpack://gatsby-starter-default/./src/assets/images/products/ritual-roots-thumbnail.png","webpack://gatsby-starter-default/./src/assets/images/brew-methods/moon-mylk-deep-gold/blender-method-deep-gold.png","webpack://gatsby-starter-default/./src/assets/images/brew-methods/moon-mylk-deep-gold/froth-action-method-deep-gold.png","webpack://gatsby-starter-default/./src/assets/images/brew-methods/moon-mylk-deep-gold/french-press-method-deep-gold.png","webpack://gatsby-starter-default/./src/assets/images/brew-methods/moon-mylk-deep-gold/jar-method-deep-gold.png","webpack://gatsby-starter-default/./src/pages/brew-guides.js"],"sourcesContent":["export default __webpack_public_path__ + \"static/mood-magick-thumbnail-51d7c6fd0420fc00f24a12d9f4998fdc.png\";","export default __webpack_public_path__ + \"static/moon-mylk-thumbnail-93d7c401d5e64b72150b2e231ff0d014.png\";","export default __webpack_public_path__ + \"static/ritual-roots-thumbnail-fa8ec62dc0704ec4549230e52424706a.png\";","export default __webpack_public_path__ + \"static/blender-method-deep-gold-05c1b58451d15ae62a03c0a883b7b228.png\";","export default __webpack_public_path__ + \"static/froth-action-method-deep-gold-8be8782ab3d4a7e01e4ccbc5cc05655f.png\";","export default __webpack_public_path__ + \"static/french-press-method-deep-gold-5c3d50fc52e0a2251d1e1732f132c03d.png\";","export default __webpack_public_path__ + \"static/jar-method-deep-gold-824bdebe8d648702c9aea94c2f5ba08e.png\";","import React, { useState, useMemo } from 'react';\nimport { Link, graphql } from 'gatsby';\nimport Layout from '../components/layout';\nimport SEO from '../components/seo';\n\n// Import product images\nimport moodMagickImage from '../assets/images/products/mood-magick-thumbnail.png';\nimport moonMylkImage from '../assets/images/products/moon-mylk-thumbnail.png';\nimport ritualRootsImage from '../assets/images/products/ritual-roots-thumbnail.png';\n\n// Import brew method icons\nimport blenderIcon from '../assets/images/brew-methods/moon-mylk-deep-gold/blender-method-deep-gold.png';\nimport frothActionIcon from '../assets/images/brew-methods/moon-mylk-deep-gold/froth-action-method-deep-gold.png';\nimport frenchPressIcon from '../assets/images/brew-methods/moon-mylk-deep-gold/french-press-method-deep-gold.png';\nimport jarShakingIcon from '../assets/images/brew-methods/moon-mylk-deep-gold/jar-method-deep-gold.png';\n\nconst BrewGuides = ({ data }) => {\n  const [selectedProduct, setSelectedProduct] = useState(null);\n  \n  // Product data\n  const products = [\n    {\n      id: 'mood-magick',\n      name: 'Mood Magick',\n      image: moodMagickImage,\n      description: 'Our signature blend for mood enhancement and vitality'\n    },\n    {\n      id: 'moon-mylk',\n      name: 'Moon Mylk',\n      image: moonMylkImage,\n      description: 'Calming elixir supporting creativity and relaxation'\n    },\n    {\n      id: 'rr',\n      name: 'Ritual Roots',\n      image: ritualRootsImage,\n      description: 'Grounding and energizing blend for balance, focus, and groundedness'\n    }\n  ];\n\n  // Map brew method IDs to their corresponding icons\n  const getBrewMethodIcon = (methodId) => {\n    const iconMap = {\n      'blender-method': blenderIcon,\n      'froth-action-method': frothActionIcon,\n      'french-press-method': frenchPressIcon,\n      'jar-shaking-method': jarShakingIcon,\n      'moka-pot-method': frenchPressIcon // Use French press icon as fallback\n    };\n    return iconMap[methodId] || blenderIcon; // Default to blender icon\n  };\n\n  // Get brewing methods from blog data\n  const brewGuidePosts = data.allMarkdownRemark.edges\n    .map(edge => edge.node)\n    .filter(post => post.frontmatter.category === 'brew guides');\n\n  // Create brewing methods data structure from blog posts\n  const brewingMethods = useMemo(() => {\n    const methods = {};\n    \n    brewGuidePosts.forEach(post => {\n      const { frontmatter } = post;\n      const methodId = frontmatter.slug;\n      \n      methods[methodId] = {\n        id: methodId,\n        name: frontmatter.title,\n        icon: getBrewMethodIcon(methodId), // Use our icon mapping instead of markdown field\n        description: frontmatter.description,\n        steps: frontmatter.steps || [],\n        products: frontmatter.products || []\n      };\n    });\n    \n    return methods;\n  }, [brewGuidePosts]);\n\n  // Get brewing methods for a specific product\n  const getBrewingMethodsForProduct = (productId) => {\n    const methods = Object.values(brewingMethods).filter(method => \n      method.products.includes(productId)\n    );\n    \n    // Sort methods in specific order: Blender, Froth Action, Jar Shaking\n    const methodOrder = ['blender-method', 'froth-action-method', 'jar-shaking-method'];\n    \n    return methods.sort((a, b) => {\n      const aIndex = methodOrder.indexOf(a.id);\n      const bIndex = methodOrder.indexOf(b.id);\n      \n      // If both methods are in the order array, sort by their position\n      if (aIndex !== -1 && bIndex !== -1) {\n        return aIndex - bIndex;\n      }\n      \n      // If only one is in the order array, prioritize it\n      if (aIndex !== -1) return -1;\n      if (bIndex !== -1) return 1;\n      \n      // If neither is in the order array, maintain original order\n      return 0;\n    });\n  };\n\n  const handleProductSelect = (product) => {\n    setSelectedProduct(product);\n    \n    // Smooth scroll to brewing methods section after a brief delay\n    setTimeout(() => {\n      const brewingSection = document.querySelector('.brewing-methods-section');\n      if (brewingSection) {\n        // Get viewport dimensions\n        const isMobile = window.innerWidth <= 768;\n        const isSmallMobile = window.innerWidth <= 480;\n        \n        // Calculate scroll position based on device\n        let scrollOptions = { behavior: 'smooth' };\n        \n        if (isSmallMobile) {\n          // For very small mobile devices, scroll to top of section\n          scrollOptions.block = 'start';\n        } else if (isMobile) {\n          // For mobile devices, scroll to near top with some offset\n          scrollOptions.block = 'start';\n          // Add additional offset for mobile navigation if needed\n          setTimeout(() => {\n            window.scrollBy({\n              top: -20, // Small offset to account for mobile nav\n              behavior: 'smooth'\n            });\n          }, 100);\n        } else {\n          // For desktop, center the section\n          scrollOptions.block = 'center';\n        }\n        \n        brewingSection.scrollIntoView(scrollOptions);\n      }\n    }, 300); // Small delay to allow animation to start\n  };\n\n  const handleBackToProducts = () => {\n    setSelectedProduct(null);\n  };\n\n  return (\n    <Layout>\n      <SEO title=\"Brew Guides\" description=\"Master the art of brewing your Vee/Ra botanical blends with our expert guides\" />\n      \n      <div className=\"brew-guides-page\">\n        <div className=\"container\">\n          {/* Header */}\n          <div className=\"brew-guides-header\">\n            <h1 className=\"brew-guides-header__title\">Brew Guides</h1>\n            <p className=\"brew-guides-header__subtitle\">\n              Master the art of brewing your Vee/Ra botanical blends with our expert guides\n            </p>\n          </div>\n\n          {/* Product Selection View */}\n          <div className=\"products-selection\">\n            <p className=\"products-selection__subtitle\">\n              Select your product to see the recommended brewing methods\n            </p>\n            \n            <div className=\"products-grid\">\n              {products.map((product) => (\n                <div \n                  key={product.id} \n                  className={`product-card ${selectedProduct?.id === product.id ? 'product-card--selected' : ''}`}\n                  onClick={() => handleProductSelect(product)}\n                >\n                  <div className=\"product-card__image\">\n                    <img \n                      src={product.image} \n                      alt={product.name}\n                      className=\"product-card__img\"\n                    />\n                  </div>\n                  <div className=\"product-card__content\">\n                    <h3 className=\"product-card__title\">{product.name}</h3>\n                    <p className=\"product-card__description\">{product.description}</p>\n                    <div className=\"product-card__cta\">\n                      <span className=\"product-card__cta-text\">\n                        {selectedProduct?.id === product.id ? 'Selected' : 'Select Blend'}\n                      </span>\n                      <span className=\"product-card__cta-arrow\">\n                        {selectedProduct?.id === product.id ? '✓' : '→'}\n                      </span>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Brewing Methods View - Shows below selected product */}\n          {selectedProduct && (\n            <div className=\"brewing-methods-section\">\n              {/*<div className=\"brewing-methods-header\">\n                <div className=\"brewing-methods-indicator\">\n                  <span className=\"brewing-methods-indicator__icon\">↓</span>\n                  <span className=\"brewing-methods-indicator__text\">Brewing Methods Below</span>\n                </div>\n                <h2 className=\"brewing-methods-title\">\n                  Brewing Methods for {selectedProduct.name}\n                </h2>\n                <p className=\"brewing-methods-subtitle\">\n                  Choose your preferred brewing method and follow our step-by-step guides\n                </p>\n              </div>*/}\n\n              <div className=\"brewing-methods-grid\">\n                {getBrewingMethodsForProduct(selectedProduct.id).map((method) => (\n                  <div key={method.id} className=\"brewing-method-card\">\n                    <div className=\"brewing-method-card__icon\">\n                      <img \n                        src={method.icon} \n                        alt={method.name}\n                        className=\"brewing-method-card__img\"\n                      />\n                    </div>\n                    <div className=\"brewing-method-card__content\">\n                      <h3 className=\"brewing-method-card__title\">{method.name}</h3>\n                                              <div className=\"brewing-method-card__description\">\n                          <ul className=\"brewing-method-card__steps\">\n                            {method.steps.map((step, index) => (\n                              <li key={index} className=\"brewing-method-card__step\">\n                                {step}\n                              </li>\n                            ))}\n                          </ul>\n                        </div>\n                      <Link \n                        to={`/brew-guides/${method.id}`}\n                        className=\"brewing-method-card__button\"\n                      >\n                        Watch Video Guide\n                      </Link>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport const query = graphql`\n  query BrewGuidesPageQuery {\n    allMarkdownRemark(\n      filter: { frontmatter: { category: { eq: \"brew guides\" } } }\n      sort: { frontmatter: { date: DESC } }\n    ) {\n      edges {\n        node {\n          frontmatter {\n            title\n            slug\n            date\n            category\n            videoUrl\n            description\n            icon\n            steps\n            products\n          }\n        }\n      }\n    }\n  }\n`;\n\nexport default BrewGuides;\n"],"names":["_ref","data","selectedProduct","setSelectedProduct","useState","products","id","name","image","moodMagickImage","description","moonMylkImage","ritualRootsImage","getBrewMethodIcon","methodId","blenderIcon","frothActionIcon","frenchPressIcon","jarShakingIcon","brewGuidePosts","allMarkdownRemark","edges","map","edge","node","filter","post","frontmatter","category","brewingMethods","useMemo","methods","forEach","slug","title","icon","steps","React","Layout","SEO","className","product","key","onClick","setTimeout","brewingSection","document","querySelector","isMobile","window","innerWidth","scrollOptions","behavior","block","scrollBy","top","scrollIntoView","handleProductSelect","src","alt","productId","Object","values","method","includes","methodOrder","sort","a","b","aIndex","indexOf","bIndex","getBrewingMethodsForProduct","step","index","Link","to"],"sourceRoot":""}